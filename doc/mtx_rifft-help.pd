#N canvas 439 122 445 515 10;
#X declare -lib iemmatrix;
#X obj 330 441 matrix;
#X msg 11 124 bang;
#X obj 11 191 mtx_cumsum;
#X obj 11 169 mtx_ones;
#X obj 11 213 mtx_- 1;
#X obj 49 255 mtx_* 0;
#X floatatom 155 202 5 0 0 0 - - - 0;
#X obj 187 255 / 8;
#X obj 49 278 t a a;
#X text 266 443 see also:;
#X text 46 34 real ifft in each matrix row;
#X text 7 60 you can calculate real inverse ffts in column direction \; matrix has to have 2^(k-1)+1 columns \; a 2^k columns matrix is the result \;;
#X msg 11 147 1 9;
#X obj 49 307 mtx_cos;
#X obj 104 307 mtx_sin;
#X text 199 203 <-- scroll here to select delay;
#X obj 49 411 mtx_print rifft;
#X obj 49 389 mtx_int;
#X obj 103 255 * -3.14159;
#X text 89 15 [mtx_rifft];
#X obj 330 465 mtx_rfft;
#X obj 49 336 mtx_rifft;
#X obj 49 362 mtx_+ 0.5;
#X obj 155 223 t b f;
#N canvas 460 154 494 171 META 0;
#X text 12 105 AUTHOR IOhannes m zmoelnig;
#X text 12 85 OUTLET_0 matrix;
#X text 12 125 HELP_PATCH_AUTHORS IOhannes m zmÃ¶lnig;
#X text 12 25 LICENSE GPL-2+;
#X text 12 65 INLET_0 matrix;
#X text 12 5 KEYWORDS control matrix math;
#X text 12 44 DESCRIPTION real-valued inverse FFT for each matrix row;
#X obj 16 147 declare -lib iemmatrix;
#X restore 352 11 pd META;
#X connect 1 0 12 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 8 0;
#X connect 6 0 23 0;
#X connect 7 0 18 0;
#X connect 8 0 13 0;
#X connect 8 1 14 0;
#X connect 12 0 3 0;
#X connect 13 0 21 0;
#X connect 14 0 21 1;
#X connect 17 0 16 0;
#X connect 18 0 5 1;
#X connect 21 0 22 0;
#X connect 22 0 17 0;
#X connect 23 0 1 0;
#X connect 23 1 7 0;
